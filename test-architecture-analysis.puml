@startuml Test Architecture Analysis

!theme plain
skinparam backgroundColor #FFFFFF
skinparam componentStyle rectangle

title Knowledge Engine Test Architecture - Current vs Proposed

package "Current Broken Architecture" as Current {
    component "Test Files" as TF {
        [file-system-edge-cases.test.mjs]
        [error-handling-recovery.test.mjs]
        [concurrency-race-conditions.test.mjs]
        [memory-resource-management.test.mjs]
        [performance-scalability.test.mjs]
        [sparql-shacl-edge-cases.test.mjs]
        [security-authorization.test.mjs]
        [data-consistency-corruption.test.mjs]
    }
    
    component "Issues" as Issues {
        [ESM Mocking Problems]
        [Incorrect Import Paths]
        [Promise Handling Errors]
        [Unrealistic Expectations]
        [Duplicate Hook Names]
        [Zod Validation Failures]
    }
    
    component "Mocking Strategy" as MockStrategy {
        [vi.spyOn with require()]
        [Module-level mocks]
        [Per-test mocks]
    }
    
    TF --> Issues : "78 failed tests"
    Issues --> MockStrategy : "Root cause"
}

package "Proposed Architecture" as Proposed {
    component "Test Infrastructure" as TestInfra {
        [TestBase.mjs]
        [MockFactory.mjs]
        [TestDataBuilder.mjs]
        [AssertionHelpers.mjs]
    }
    
    component "Test Categories" as TestCats {
        [Unit Tests]
        [Integration Tests]
        [Edge Case Tests]
        [Performance Tests]
    }
    
    component "Mocking Strategy" as NewMockStrategy {
        [vi.mock at module level]
        [Factory pattern for mocks]
        [Dependency injection]
        [Mock lifecycle management]
    }
    
    component "Test Structure" as TestStruct {
        [Arrange-Act-Assert pattern]
        [Test data builders]
        [Shared test utilities]
        [Consistent error handling]
    }
    
    TestInfra --> TestCats
    TestCats --> NewMockStrategy
    NewMockStrategy --> TestStruct
}

package "Implementation Strategy" as Implementation {
    component "Phase 1: Infrastructure" as Phase1 {
        [Create TestBase class]
        [Implement MockFactory]
        [Build TestDataBuilder]
        [Add AssertionHelpers]
    }
    
    component "Phase 2: Migration" as Phase2 {
        [Migrate file-system tests]
        [Migrate error-handling tests]
        [Migrate concurrency tests]
        [Migrate remaining tests]
    }
    
    component "Phase 3: Validation" as Phase3 {
        [Run full test suite]
        [Validate edge cases]
        [Performance testing]
        [Documentation updates]
    }
    
    Phase1 --> Phase2
    Phase2 --> Phase3
}

note right of Current
    **Current Problems:**
    - 78 failed tests out of 106
    - ESM mocking incompatibility
    - Incorrect relative import paths
    - Promise handling on non-Promise values
    - Tests expect features not implemented
    - Duplicate hook name conflicts
    - Zod validation schema mismatches
end note

note right of Proposed
    **Proposed Solutions:**
    - Centralized test infrastructure
    - Proper ESM mocking strategy
    - Factory pattern for test data
    - Consistent assertion patterns
    - Shared utilities and helpers
    - Clear separation of concerns
end note

@enduml