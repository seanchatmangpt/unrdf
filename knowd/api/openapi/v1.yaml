openapi: 3.0.3
info:
  title: Knowd API
  version: 1.0.0
  description: Knowledge Graph Database API for SPARQL queries, SHACL validation, and transaction management

servers:
  - url: /v1
    description: Knowd API v1

paths:
  /query:
    post:
      summary: Execute SPARQL query
      description: Execute a SPARQL query against the knowledge graph
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: Query results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'

  /query/stream:
    post:
      summary: Execute SPARQL query with streaming results
      description: Execute a SPARQL query and stream results as NDJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: Streaming query results
          content:
            application/x-ndjson:
              schema:
                type: array
                items:
                  type: object

  /query/at:
    post:
      summary: Execute time-travel SPARQL query
      description: Execute a SPARQL query at a specific snapshot time
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAtRequest'
      responses:
        '200':
          description: Query results at specified time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'

  /tx:
    post:
      summary: Execute transaction
      description: Apply RDF deltas (additions and removals) to the knowledge graph
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TxRequest'
      responses:
        '200':
          description: Transaction result with receipt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxResponse'

  /hooks/evaluate:
    post:
      summary: Evaluate knowledge hooks
      description: Evaluate registered knowledge hooks against current state
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HookEvalRequest'
      responses:
        '200':
          description: Hook evaluation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookEvalResponse'

  /validate:
    post:
      summary: Validate with SHACL
      description: Validate RDF data against SHACL shapes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateRequest'
      responses:
        '200':
          description: SHACL validation report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateResponse'

  /receipts/{id}:
    get:
      summary: Get receipt by ID
      description: Retrieve a stored transaction receipt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction receipt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'

  /receipts/{id}/verify:
    get:
      summary: Verify receipt signature
      description: Verify the cryptographic signature of a receipt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Receipt verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'

  /receipts/search:
    get:
      summary: Search receipts
      description: Search for receipts by actor, time range, and tags
      parameters:
        - name: actor
          in: query
          schema:
            type: string
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: tag
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of matching receipts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Receipt'

  /store/stats:
    get:
      summary: Get store statistics
      description: Retrieve statistics about the knowledge graph store
      responses:
        '200':
          description: Store statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreStats'

  /packs/reload:
    post:
      summary: Reload policy packs
      description: Trigger a reload of policy packs from configured sources
      responses:
        '200':
          description: Reload status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackReloadResponse'

  /admin/namespaces:
    post:
      summary: Create namespace
      description: Create a new multi-tenant namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceRequest'
      responses:
        '200':
          description: Namespace created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'

    get:
      summary: List namespaces
      description: List all available namespaces
      responses:
        '200':
          description: List of namespaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /admin/rollout:
    post:
      summary: Set pack rollout
      description: Configure staged rollout of policy packs across namespaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolloutRequest'
      responses:
        '200':
          description: Rollout configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolloutResponse'

    get:
      summary: Get pack rollout status
      description: Get current rollout configuration for a namespace
      parameters:
        - name: ns
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Current rollout status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolloutResponse'

  /admin/promote-follower:
    post:
      summary: Promote follower to leader
      description: Manually promote a follower node to leader in cluster mode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteRequest'
      responses:
        '200':
          description: Promotion result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteResponse'

  /similar:
    post:
      summary: Find similar items
      description: Find semantically similar items using vector embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimilarRequest'
      responses:
        '200':
          description: Similar items with scores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarResponse'

  /vector/upsert:
    post:
      summary: Upsert vector embeddings
      description: Add or update vector embeddings for documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VectorUpsertRequest'
      responses:
        '200':
          description: Upsert result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorUpsertResponse'

  /admin/replay:
    post:
      summary: Replay receipts
      description: Replay a set of receipts into a fresh namespace for validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplayRequest'
      responses:
        '200':
          description: Replay result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplayResponse'

components:
  schemas:
    QueryRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: SPARQL query string
        kind:
          type: string
          enum: [sparql-select, sparql-ask, sparql-construct]
          description: Query type
        params:
          type: object
          description: Query parameters for prepared statements

    QueryResponse:
      type: object
      properties:
        rows:
          type: array
          items:
            type: object
        kind:
          type: string
        stats:
          type: object

    QueryAtRequest:
      type: object
      required:
        - query
        - at
      properties:
        query:
          type: string
        at:
          type: string
          format: date-time
        params:
          type: object

    TxRequest:
      type: object
      required:
        - delta
      properties:
        delta:
          type: object
          properties:
            add:
              type: array
              items:
                type: string
            rem:
              type: array
              items:
                type: string
        actor:
          type: string

    TxResponse:
      type: object
      properties:
        receiptId:
          type: string
        merkleRoot:
          type: string
        delta:
          $ref: '#/components/schemas/TxDelta'

    TxDelta:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
        rem:
          type: array
          items:
            type: string

    HookEvalRequest:
      type: object
      required:
        - hook
      properties:
        hook:
          type: object
        persist:
          type: boolean

    HookEvalResponse:
      type: object
      properties:
        fired:
          type: boolean
        result:
          type: object

    ValidateRequest:
      type: object
      properties:
        data:
          type: string
          description: RDF data to validate (TTL or JSON-LD)
        shapes:
          type: string
          description: SHACL shapes (TTL or JSON-LD)

    ValidateResponse:
      type: object
      properties:
        conforms:
          type: boolean
        violations:
          type: array
          items:
            type: object

    Receipt:
      type: object
      properties:
        version:
          type: string
        actor:
          type: string
        timestamp:
          type: string
          format: date-time
        delta:
          $ref: '#/components/schemas/TxDelta'
        canonical:
          type: string
        merkleRoot:
          type: string
        signature:
          type: string
        pubKey:
          type: string
        git:
          type: object

    VerifyResponse:
      type: object
      properties:
        ok:
          type: boolean
        merkleRoot:
          type: string
        signature:
          type: string

    StoreStats:
      type: object
      properties:
        quads:
          type: integer
        segments:
          type: integer
        bytes:
          type: integer
        snapshotAgeSec:
          type: integer

    PackReloadResponse:
      type: object
      properties:
        reloaded:
          type: boolean

    NamespaceRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    NamespaceResponse:
      type: object
      properties:
        name:
          type: string

    RolloutRequest:
      type: object
      required:
        - namespace
      properties:
        namespace:
          type: string
        stable:
          type: string
        canary:
          type: string
        percent:
          type: integer
          minimum: 0
          maximum: 100

    RolloutResponse:
      type: object
      properties:
        namespace:
          type: string
        stable:
          type: string
        canary:
          type: string
        percent:
          type: integer

    PromoteRequest:
      type: object
      required:
        - namespace
      properties:
        namespace:
          type: string

    PromoteResponse:
      type: object
      properties:
        promoted:
          type: boolean
        newLeader:
          type: string

    SimilarRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
        topK:
          type: integer
          default: 5

    SimilarResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              score:
                type: number

    VectorUpsertRequest:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
        text:
          type: string

    VectorUpsertResponse:
      type: object
      properties:
        upserted:
          type: boolean

    ReplayRequest:
      type: object
      required:
        - namespace
        - receipts
      properties:
        namespace:
          type: string
        receipts:
          type: array
          items:
            type: string

    ReplayResponse:
      type: object
      properties:
        namespace:
          type: string
        applied:
          type: integer
