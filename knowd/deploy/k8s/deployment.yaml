apiVersion: apps/v1
kind: Deployment
metadata:
  name: knowd
  labels:
    app: knowd
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: knowd
  template:
    metadata:
      labels:
        app: knowd
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: knowd
        image: knowd/knowd:v1.0.0
        ports:
        - containerPort: 8090
          name: http
          protocol: TCP
        env:
        - name: KNOWD_ADDR
          value: ":8090"
        - name: KNOWD_DATA_DIR
          value: "/data"
        - name: KNOWD_STORE
          value: "disk"
        - name: KNOWD_OTEL_TRACING
          value: "true"
        - name: KNOWD_OTEL_METRICS
          value: "true"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://jaeger-collector.monitoring.svc.cluster.local:14268/api/traces"
        - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
          value: "http://prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config
          mountPath: /etc/knowd
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: knowd-data-pvc
      - name: config
        configMap:
          name: knowd-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
