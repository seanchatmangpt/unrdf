# Security Policy Pack Template
# This template provides security-focused policies for access control,
# threat detection, vulnerability assessment, and security compliance.
#
# Usage:
# 1. Customize security controls and thresholds
# 2. Configure authentication and authorization hooks
# 3. Define security monitoring and alerting
# 4. Load via PolicyPackManager

metadata:
  name: "security-policy-pack"
  version: "1.0.0"
  description: "Security policy pack for threat detection and access control"
  author: "security-team"
  license: "MIT"
  tags:
    - "security"
    - "access-control"
    - "threat-detection"
    - "compliance"
    - "cryptography"
  created: "2025-01-01T00:00:00Z"
  updated: "2025-01-01T00:00:00Z"

ontologies:
  - "http://www.w3.org/ns/prov#"                # Provenance
  - "http://www.w3.org/ns/odrl/2/"              # Rights Language
  - "http://www.w3.org/ns/auth/acl#"            # Access Control
  - "http://example.org/security#"              # Security ontology

config:
  enabled: true
  priority: 100                                  # Highest priority for security
  strictMode: true
  auditTrail: true
  receiptAnchor: "git-notes"
  cryptographicProof: true
  failClosed: true                               # Deny by default on errors

# Security Hooks
hooks:
  # Authentication and Authorization
  - path: "./hooks/authentication-validation.mjs"
    enabled: true
    priority: 100
    description: "Validates authentication credentials and tokens"
    metadata:
      category: "authentication"
      severity: "critical"

  - path: "./hooks/authorization-enforcement.mjs"
    enabled: true
    priority: 99
    description: "Enforces authorization policies and permissions"
    metadata:
      category: "authorization"
      severity: "critical"

  # Threat Detection
  - path: "./hooks/anomaly-detection.mjs"
    enabled: true
    priority: 95
    description: "Detects anomalous access patterns and behaviors"
    metadata:
      category: "threat-detection"
      severity: "high"

  - path: "./hooks/rate-limiting.mjs"
    enabled: true
    priority: 94
    description: "Prevents brute force and DDoS attacks"
    metadata:
      category: "threat-prevention"
      severity: "high"

  # Data Protection
  - path: "./hooks/encryption-validation.mjs"
    enabled: true
    priority: 90
    description: "Ensures sensitive data is properly encrypted"
    metadata:
      category: "data-protection"
      severity: "high"

  - path: "./hooks/pii-detection.mjs"
    enabled: true
    priority: 89
    description: "Detects and protects personally identifiable information"
    metadata:
      category: "privacy"
      severity: "high"

  # Vulnerability Assessment
  - path: "./hooks/injection-prevention.mjs"
    enabled: true
    priority: 85
    description: "Prevents SPARQL injection and malicious queries"
    metadata:
      category: "vulnerability"
      severity: "critical"

  - path: "./hooks/input-validation.mjs"
    enabled: true
    priority: 84
    description: "Validates and sanitizes all inputs"
    metadata:
      category: "vulnerability"
      severity: "high"

  # Security Audit
  - path: "./hooks/security-audit-trail.mjs"
    enabled: true
    priority: 80
    description: "Creates detailed security audit trail"
    metadata:
      category: "audit"
      severity: "high"

  - path: "./hooks/failed-access-monitoring.mjs"
    enabled: true
    priority: 79
    description: "Monitors and alerts on failed access attempts"
    metadata:
      category: "monitoring"
      severity: "high"

# Security Controls
security:
  # Authentication
  authentication:
    methods:
      - "jwt"                                    # JSON Web Tokens
      - "oauth2"                                 # OAuth 2.0
      - "api-key"                                # API Keys

    tokenValidation:
      enabled: true
      validateSignature: true
      validateExpiration: true
      validateIssuer: true

    sessionManagement:
      maxSessionAge: 3600                        # 1 hour in seconds
      refreshTokenEnabled: true
      refreshTokenExpiry: 86400                  # 24 hours

  # Authorization
  authorization:
    model: "rbac"                                # Role-Based Access Control

    defaultPolicy: "deny"                        # Deny by default

    roles:
      - name: "admin"
        permissions: ["*"]                       # All permissions

      - name: "user"
        permissions:
          - "read:public"
          - "read:owned"
          - "write:owned"

      - name: "guest"
        permissions:
          - "read:public"

    permissionChecks:
      enabled: true
      cacheResults: true
      cacheTTL: 300                              # 5 minutes

  # Threat Detection
  threatDetection:
    anomalyDetection:
      enabled: true
      algorithms:
        - "statistical"                          # Statistical anomaly detection
        - "pattern-based"                        # Pattern matching

      thresholds:
        suspiciousActivityScore: 0.7             # 0-1 scale
        alertThreshold: 0.9

    rateLimiting:
      enabled: true
      global:
        requestsPerMinute: 1000
        requestsPerHour: 10000

      perUser:
        requestsPerMinute: 100
        requestsPerHour: 1000

      perIP:
        requestsPerMinute: 200
        requestsPerHour: 2000

    bruteForceProtection:
      enabled: true
      maxFailedAttempts: 5
      lockoutDuration: 900                       # 15 minutes
      resetPeriod: 3600                          # 1 hour

  # Data Protection
  dataProtection:
    encryption:
      atRest:
        enabled: true
        algorithm: "aes-256-gcm"

      inTransit:
        enabled: true
        tlsVersion: "1.3"
        cipherSuites:
          - "TLS_AES_256_GCM_SHA384"
          - "TLS_CHACHA20_POLY1305_SHA256"

    sensitiveDataHandling:
      detectPII: true
      maskSensitiveData: true
      encryptSensitiveData: true

      piiPatterns:
        - type: "email"
          regex: "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"

        - type: "ssn"
          regex: "\\b\\d{3}-\\d{2}-\\d{4}\\b"

        - type: "credit-card"
          regex: "\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b"

  # Vulnerability Prevention
  vulnerabilityPrevention:
    injectionPrevention:
      enabled: true
      validateSPARQL: true
      sanitizeInputs: true
      useParameterizedQueries: true

    inputValidation:
      enabled: true
      maxInputLength: 10000
      allowedCharacters: "alphanumeric-extended"
      rejectScriptTags: true

# Compliance Requirements
compliance:
  standards:
    - name: "Security Framework"
      version: "1.0"
      requirements:
        - "All access must be authenticated"
        - "All operations must be authorized"
        - "All sensitive data must be encrypted"
        - "All security events must be logged"
        - "All failed access attempts must trigger alerts"

    - name: "Cryptographic Standards"
      version: "1.0"
      requirements:
        - "Use AES-256 for data encryption"
        - "Use TLS 1.3 for data in transit"
        - "Use SHA-256 for integrity verification"
        - "Use Ed25519 for cryptographic signatures"

  # Security Monitoring
  monitoring:
    enabled: true

    realTime:
      enabled: true
      events:
        - "failed-authentication"
        - "unauthorized-access"
        - "anomaly-detected"
        - "rate-limit-exceeded"

    alerts:
      - condition: "failed_authentication_threshold"
        threshold: 5
        window: 300                              # 5 minutes
        severity: "high"
        notification: ["security-team@example.org"]

      - condition: "unauthorized_access"
        severity: "critical"
        notification: ["security-team@example.org", "soc@example.org"]

      - condition: "anomaly_detected"
        threshold: 0.9
        severity: "high"
        notification: ["security-team@example.org"]

  reporting:
    enabled: true
    formats: ["json", "pdf"]
    destination: "./reports/security"
    schedule:
      realtime: ["critical-security-events"]
      hourly: ["security-summary"]
      daily: ["security-metrics", "threat-analysis"]
      weekly: ["vulnerability-assessment"]

# Dependencies
dependencies:
  - name: "basic-policy-pack"
    version: ">=1.0.0"

# Environment Overrides
environments:
  development:
    security:
      authorization:
        defaultPolicy: "allow"                   # More permissive in dev
      threatDetection:
        rateLimiting:
          enabled: false

  production:
    security:
      authorization:
        defaultPolicy: "deny"
      threatDetection:
        rateLimiting:
          enabled: true
      dataProtection:
        encryption:
          atRest:
            enabled: true
          inTransit:
            enabled: true

# Lifecycle Events
lifecycle:
  beforeLoad:
    - "npm run security-audit"
    - "npm run validate-security-policies"

  afterLoad:
    - "npm run generate-security-docs"
    - "npm run notify-security-team"

# Resources
resources:
  schemas: "./schemas/security"
  policies: "./policies/security"
  shapes: "./shapes/security"
  documentation: "./docs/security"
  certificates: "./certificates"
  keys: "./keys"                                 # Should be encrypted/secured
