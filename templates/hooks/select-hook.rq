# SPARQL SELECT Hook Template
# This template provides a SPARQL SELECT query for Knowledge Hook conditions.
# SELECT queries return a set of results and are ideal for analyzing patterns or aggregating data.
#
# Usage:
# 1. Customize the SELECT clause to return the data you need
# 2. Update the WHERE clause with your pattern matching logic
# 3. Add FILTER clauses for conditions
# 4. Calculate the SHA-256 hash of this file
# 5. Reference this file in your Knowledge Hook definition
#
# Example: Find all transactions above a threshold

PREFIX ex: <http://example.org/>
PREFIX fibo: <https://spec.edmcouncil.org/fibo/ontology/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# TODO: Customize what variables to return
# Example: SELECT ?transaction ?amount ?timestamp WHERE { ... }
SELECT ?subject ?predicate ?object WHERE {
  # TODO: Replace with your pattern matching logic

  # Pattern 1: Find resources with specific properties
  ?subject ex:hasType ex:ImportantResource .
  ?subject ?predicate ?object .

  # Pattern 2: Find transactions above threshold
  # ?transaction rdf:type fibo:Transaction ;
  #              fibo:hasAmount ?amount ;
  #              fibo:hasTimestamp ?timestamp .
  # FILTER(?amount > 10000)

  # Pattern 3: Find resources with missing required properties
  # ?subject rdf:type ex:RequiredType .
  # FILTER NOT EXISTS { ?subject ex:requiredProperty ?value }

  # Pattern 4: Find data quality issues
  # ?subject ex:email ?email .
  # FILTER(!REGEX(?email, "^[^@]+@[^@]+\\.[^@]+$"))

  # Pattern 5: Aggregate analysis
  # ?transaction fibo:hasAmount ?amount .
  # GROUP BY ?currency
  # HAVING(SUM(?amount) > 50000)
}
# TODO: Add ordering if needed
# ORDER BY DESC(?amount)

# TODO: Add limit if needed
# LIMIT 100
